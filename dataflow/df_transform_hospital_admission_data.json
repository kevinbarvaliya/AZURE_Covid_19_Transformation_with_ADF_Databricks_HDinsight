{
	"name": "df_transform_hospital_admission_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospilat_admission",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionDataSource"
				},
				{
					"dataset": {
						"referenceName": "ds_country_looup",
						"type": "DatasetReference"
					},
					"name": "CountryLookup"
				},
				{
					"dataset": {
						"referenceName": "ds_date_lookup",
						"type": "DatasetReference"
					},
					"name": "DateLoopup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admission_weekly",
						"type": "DatasetReference"
					},
					"name": "SinkWeeklyData"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admission_daily",
						"type": "DatasetReference"
					},
					"name": "SinkDailyData"
				}
			],
			"transformations": [
				{
					"name": "ContryCodeLookup"
				},
				{
					"name": "SelectRequiresField"
				},
				{
					"name": "SplitDailyDataFromWeekly"
				},
				{
					"name": "AggregateDimDaate"
				},
				{
					"name": "JoinWithDate"
				},
				{
					"name": "PivoteWeeklyCount"
				},
				{
					"name": "PivoteDayCount"
				},
				{
					"name": "SortWeekly"
				},
				{
					"name": "SortDaily"
				},
				{
					"name": "SelectWeeklyRequiredFiled"
				},
				{
					"name": "SelectDailyRequiredFiled"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionDataSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryLookup",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DateLoopup",
				"HospitalAdmissionDataSource, CountryLookup lookup(HospitalAdmissionDataSource@country == CountryLookup@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> ContryCodeLookup",
				"ContryCodeLookup select(mapColumn(",
				"          country = HospitalAdmissionDataSource@country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectRequiresField",
				"SelectRequiresField split(indicator == \"Weekly new hospital admissions per 100k\" || indicator == \"Weekly new ICU admissions per 100k\",",
				"     disjoint: false) ~> SplitDailyDataFromWeekly@(Weekly, Daily)",
				"DateLoopup aggregate(groupBy(ecdc_year_week = year+\"-W\"+lpad(week_of_year,2,\"0\")),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> AggregateDimDaate",
				"SplitDailyDataFromWeekly@Weekly, AggregateDimDaate join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinWithDate",
				"JoinWithDate pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          source,",
				"          week_start_date,",
				"          week_end_date),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICUadmissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> PivoteWeeklyCount",
				"SplitDailyDataFromWeekly@Daily pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> PivoteDayCount",
				"PivoteWeeklyCount sort(desc(reported_year_week, true),",
				"     asc(country, true)) ~> SortWeekly",
				"PivoteDayCount sort(desc(reported_date, true),",
				"     asc(country, true)) ~> SortDaily",
				"SortWeekly select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_start_date = week_start_date,",
				"          reported_week_end_date = week_end_date,",
				"          Weekly_new_hospital_admissions_count = {Weekly new hospital admissions per 100k_count},",
				"          Weekly_new_ICU_admissions_count = {Weekly new ICUadmissions per 100k_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectWeeklyRequiredFiled",
				"SortDaily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          hospital_occupancy_count = {Daily hospital occupancy_count},",
				"          ICU_occupancy_count = {Daily ICU occupancy_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDailyRequiredFiled",
				"SelectWeeklyRequiredFiled sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital_admission_weekly.csv'],",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkWeeklyData",
				"SelectDailyRequiredFiled sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital_admission_daily.csv'],",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkDailyData"
			]
		}
	}
}